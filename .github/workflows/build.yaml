name: build

on:
    push:
        branches:
            - 'develop'
        tags:
            - 'v*'

concurrency:
    group: ${{ github.workflow }}-${{ github.event.number || github.ref }}-build
    cancel-in-progress: true

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest

        permissions:
            contents: read
            packages: write
            id-token: write

        steps:
            - uses: actions/checkout@master
              with:
                  fetch-depth: 1

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
              with:
                  driver-opts: |
                      image=moby/buildkit:v0.10.6

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v2
              if: github.repository_owner == 'alekitto'
              with:
                  role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
                  aws-region: us-east-1

            - name: Login to Amazon ECR Public
              uses: aws-actions/amazon-ecr-login@v1
              if: github.repository_owner == 'alekitto'
              with:
                  registry-type: public

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - id: docker_meta
              name: Extract docker image metadata
              uses: docker/metadata-action@v4.3.0
              with:
                  images: |
                      ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
                      public.ecr.aws/${{ github.repository_owner }}/${{ github.event.repository.name }}

            - name: Build and Push container images
              uses: docker/build-push-action@v3
              with:
                  platforms: linux/amd64,linux/arm64
                  push: true
                  tags: ${{ steps.docker_meta.outputs.tags }}
                  labels: ${{ steps.docker_meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
